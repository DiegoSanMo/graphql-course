type Query {
  users(query: String): [User!]!
  posts(query: String): [Post!]!
  comments: [Comment!]!
  post: Post!
  user: User!
}

type Mutation {
  createUser(data: createUserInput!): User!
  deleteUser(userId: ID!): User!
  updateUser(id: ID!, data: UpdateUserInput!): User!
  createPost(post: createPostInput!): Post!
  deletePost(postId: ID!): Post!
  createComment(comment: createCommentInput!): Comment!
  deleteComment(commentId: ID!): Comment!
}

input UpdateUserInput {
  name: String
  email: String
  age: Int
}
input createUserInput {
  name: String!
  email: String!
  age: Int
}

input createPostInput {
  title: String!
  body: String!
  published: Boolean!
  author: ID!
}

input createCommentInput {
  text: String!
  author: ID!
  post: ID!
}

type User {
  id: ID!
  name: String!
  email: String!
  age: Int
  posts: [Post!]!
  comments: [Comment!]!
}
type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author: User!
  comments: [Comment!]!
}
type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}
